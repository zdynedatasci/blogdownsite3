<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MBA | Zachary Dyne</title>
    <link>https://zldyne.netlify.app/category/mba/</link>
      <atom:link href="https://zldyne.netlify.app/category/mba/index.xml" rel="self" type="application/rss+xml" />
    <description>MBA</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 Zachary Dyne</copyright><lastBuildDate>Sat, 23 May 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://zldyne.netlify.app/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>MBA</title>
      <link>https://zldyne.netlify.app/category/mba/</link>
    </image>
    
    <item>
      <title>An Overview of the Willamette MBA Community Grant Program SQL Database</title>
      <link>https://zldyne.netlify.app/post/agsmgrantsql/agsmgrantssql/</link>
      <pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate>
      <guid>https://zldyne.netlify.app/post/agsmgrantsql/agsmgrantssql/</guid>
      <description>&lt;p&gt;One of my favorite courses I took during my time at Atkinson was &lt;em&gt;GSMDS5003: Data Engineering&lt;/em&gt;, taught by the one and only Prof. Henry Bi. We not only learned how to write SQL code but also about the fundamentals of database design, including entity relational (ER) modeling, standardization, and normalization. Learning the structure of well designed databases made learning to retrieve data via SQL a fairly straitforward extension. The course&amp;rsquo;s final project was to create a database of our own using Microsoft Access, so I decided to use this opportunity to solve a different problem I was dealing with: the information scattered throughout the Google Drive of the Willamette MBA Community Grant Program.&lt;/p&gt;
&lt;h3 id=&#34;willamette-mba-community-grant-program&#34;&gt;Willamette MBA Community Grant Program&lt;/h3&gt;
&lt;p&gt;The 
&lt;a href=&#34;https://www.agsmgrants.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Willamette MBA Community Grant Program&lt;/a&gt; is the only 100% student-administered grantmaking program in the US and provides funding opportunities for nonprofit or social service organizations serving Oregon&amp;rsquo;s 
&lt;a href=&#34;https://geology.com/county-map/oregon.shtml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Marion, Polk, and/or Yamhill counties&lt;/a&gt;. As students facilitating multiple rounds of grantee applications by reviewing organizational and operational metrics while following up on the results of projects from previous funding cycles, it was getting difficult to keep track of all of the information we needed. As the project manager and lead financial data analyst, the disorganization made creating tools for internal communication, financial statement analysis, and risk modeling particularly tedious. Additionally, because it is completely student-run, the program experiences 100% annual turnover, with the exception of the two faculty instructors. This makes organizing institutional knowledge all the more difficult yet essential. Seems like a problem an Access SQL database could solve!&lt;/p&gt;
&lt;h3 id=&#34;database-overview&#34;&gt;Database Overview&lt;/h3&gt;
&lt;p&gt;My goal in creating this database was to make it as flexable as possible to adapt to future itrations of the program. The Grant Program only just finished its fourth year and there are many things that could hypothetically happen that haven&amp;rsquo;t yet. As such, the database seems a bit redundant (in SQL-talk: it has more many-to-many relationships than initally seems necessary). For example, an &lt;em&gt;EnrollIn&lt;/em&gt; relationship needs its own table since it is hypothetically possible for a student to enroll in the course more than once (they coud be a JD/MBA or an MBA-for-Life student). If we just assumed that each student will enroll in the course only once, &lt;em&gt;EnrollIn&lt;/em&gt; could just be a column in the &lt;em&gt;Student&lt;/em&gt;  table. Feel free to check out the 
&lt;a href=&#34;https://drive.google.com/file/d/1rOdZmnAYQa-UH4V_KDCOjGDaF2aHaYjl/view?usp=sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;full project description&lt;/a&gt; for all of the database requirements.&lt;/p&gt;
&lt;p&gt;While I can&amp;rsquo;t share the content of many tables due to privacy reasons, I can share the database&amp;rsquo;s relationship diagrams as a proof of concept.&lt;/p&gt;
&lt;h5 id=&#34;entity-relation-model&#34;&gt;Entity Relation Model&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://zldyne.netlify.app/post/AGSMGrantSQL/2020-05-23-an-overview-of-the-willamette-mba-community-grant-program-sql-database_files/ERDModel.PNG&#34; alt=&#34;ERD Model&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;access-relational-diagram&#34;&gt;Access Relational Diagram&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://zldyne.netlify.app/post/AGSMGrantSQL/2020-05-23-an-overview-of-the-willamette-mba-community-grant-program-sql-database_files/AccessRelation.PNG&#34; alt=&#34;Access Relational&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;hey-it-works&#34;&gt;Hey, it works!&lt;/h4&gt;
&lt;p&gt;Sample problem: &lt;em&gt;List the organization name, project name, description, and amount received for each project operated by an organization who has operated more than one project. Provide the list in descending order by amount.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zldyne.netlify.app/post/AGSMGrantSQL/2020-05-23-an-overview-of-the-willamette-mba-community-grant-program-sql-database_files/SampleCode.PNG&#34; alt=&#34;Sample Code&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zldyne.netlify.app/post/AGSMGrantSQL/2020-05-23-an-overview-of-the-willamette-mba-community-grant-program-sql-database_files/SampleQ.PNG&#34; alt=&#34;Sample Q&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;final-thoughts&#34;&gt;Final Thoughts&lt;/h3&gt;
&lt;p&gt;I had a lot of fun working on this project since it combines two of my primary interests: data science and nonprofit management. Thank you to Prof. Henry Bi for your guidance and encouragement along the way! If you&amp;rsquo;re interested to learn more about the Willamette MBA Community Grant Program, check out the recently published 
&lt;a href=&#34;https://static1.squarespace.com/static/5d96678c577c9008fd68696b/t/5eb30597c5e14117f3481700/1588790698192/WUMBA_PICI_Y4_AnnualReport2020.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2019-2020 Annual Report&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Relocation, Education, and Incentivization: Adjusting residential zoning laws to improve economic mobility in Kansas City, Missouri</title>
      <link>https://zldyne.netlify.app/post/zoninglawskcmo/kcmo-impact-zoning-laws-on-education/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://zldyne.netlify.app/post/zoninglawskcmo/kcmo-impact-zoning-laws-on-education/</guid>
      <description>&lt;p&gt;Economic mobility, the ability for individuals to economically fare better than their parents did, is an essential component for the continued livelihood of a city. This is especially true for Kansas City in its efforts to revitalize what was once a lively economic hub based on manufacturing and transportation to a modern metropolis fueled by technology and innovation. Recent efforts in economic development from city and state administered programs, such as the Opportunity Zone Program, the KC Rise co-investment fund, and the BioNexus KC life science development initiative, have contributed to a 
&lt;a href=&#34;http://www.kcrisingmetrics.org/gdp.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;5.7% growth in real GDP&lt;/a&gt; and a 
&lt;a href=&#34;http://www.kcrisingmetrics.org/MHI.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;7.8% growth in median household income from 2013 to 2017&lt;/a&gt;. While these metrics are certainly a positive indication for the city’s future, Kansas City continues to lag behind its self-identified peer cities on both metrics. Additionally, not all the development has benefited all Kansas City residents equally. Several neighborhoods, particularly those on the east side of the city, continue to experience the effects of decades of disinvestment, including underfunded public schools 
&lt;a href=&#34;https://www.kcur.org/show/up-to-date/2015-02-23/why-kansas-citys-east-side-lags-in-economic-development&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;resulting from uneven property taxes&lt;/a&gt;. According to the Stanford Education Opportunity Monitoring Project, non-poor students in the Kansas City School District perform at an average of 0.12 grades above grade level, whereas poor students perform at an average of 1.85 grades below grade level (Exhibit 1).&lt;/p&gt;
&lt;h4 id=&#34;exhibit-1&#34;&gt;Exhibit 1&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://zldyne.netlify.app/post/ZoningLawsKCMO/2020-05-27-relocation-education-and-incentivization-adjusting-residential-zoning-laws-to-improve-economic-mobility-in-kansas-city-missouri_files/EDUscreenshot.PNG&#34; alt=&#34;Exhibit 1&#34;&gt;
&lt;em&gt;The red dot represents data for the Kansas City School District&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Access to quality K-12 education is known to have a 
&lt;a href=&#34;https://www.thebalance.com/economic-mobility-4163493&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;strong relationship with earnings later in life&lt;/a&gt;. Research by Harvard economist Raj Chetty found this to be true even after controlling for intergenerational wealth. 
&lt;a href=&#34;https://www.citylab.com/equity/2019/08/affordable-housing-assistance-voucher-seattle-neighborhoods/595423/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chetty’s lab financed families in Seattle, Washington&lt;/a&gt; to move from Section 8 housing to areas with better public schools, which rarely had Section 8 housing, and the children in those families saw a large increase in their earnings compared to controls. While imitating Chetty’s methods appears to be a good starting point, it is not financially feasible at scale. To improve economic mobility, the City of Kansas City must create policies and programs that provide greater access to higher quality K-12 education for students from low-income families. While school vouchers or busing programs seem to be effective for a smaller number of students in the short run, a more elegant tactic possibly with further-reaching impacts involves adjusting Kansas City’s residential zoning laws.&lt;/p&gt;
&lt;p&gt;Because public schools are funded primarily through property taxes, those who live in areas with less valuable residential property are at a structural disadvantage in opportunities for public K-12 education. Moreover, because 
&lt;a href=&#34;https://www.zoneomics.com/zoning-maps/missouri/kansas-city&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;much of Kansas City’s residential areas are zoned R-80&lt;/a&gt;, meaning that the minimum lot size is 80,000 square feet, there are less opportunities to develop new homes in areas with higher valued real estate. This zoning law also keeps the price of each individual lot higher, which further increase economic segregation across the city and reinforces the difference in education and lifetime earnings outcomes between poor nonpoor children.&lt;/p&gt;
&lt;p&gt;Accordingly, to increase opportunities for economic mobility, the City of Kansas City should consider amending the residential zoning codes to allow for smaller single-family developments across the city. This will make moving to areas with higher valued land and higher funded public schools more accessible to lower-income families. It works towards incentivizing similar moving patters to those Chetty’s lab privately financed without requiring the city to either raise local taxes or routinely pull funding from elsewhere in the city’s annual budget to gather adequate public funding.&lt;/p&gt;
&lt;p&gt;Shrinking the minimum residential lot size would also have the positive effect of making buying a home more affordable across the city. Despite 
&lt;a href=&#34;https://www.trulia.com/research/rent-vs-buy-winter-2014/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;buying a home being 66% less expensive than renting a home in Kansas City&lt;/a&gt;, home ownership has declined across the city 
&lt;a href=&#34;https://www.bizjournals.com/kansascity/news/2016/08/18/homeownership-rental-rate-comparison.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;from 73% in 2007 to just 62% in 2016&lt;/a&gt;. This discrepancy results from an inability to afford an initial down payment on a home, despite it being a cost-saving long-term investment. If minimum lot sizes were lower, causing home prices to decline, a down payment on a home becomes more accessible to more families. Greater access to home ownership will also contributes to long-term economic mobility. Amending the zoning code is one tactic that the City of Kanas City should employ to increase opportunities for economic mobility through increased access to education and home ownership.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Forecasting Target Corporation&#39;s Quarterly Revenue</title>
      <link>https://zldyne.netlify.app/post/target-quarterly-revenue-forecasting/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://zldyne.netlify.app/post/target-quarterly-revenue-forecasting/</guid>
      <description>
&lt;script src=&#34;https://zldyne.netlify.app/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#additive-decomposition&#34;&gt;Additive Decomposition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multiplicative-decomposition&#34;&gt;Multiplicative Decomposition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#forecasting-2002---2003&#34;&gt;Forecasting 2002 - 2003&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;During my MBA program I had the opportunity to take a course on busines and economic forecasting. The revenue cycle of many businesses can be highly seasonal, which adds a degree of complexity to creating forecasts. This is especially true in the retail sector, which made forecasting Target Corporation’s quarterly revenue from 1993-2001 a fun challenge!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#setup
library(tidyverse)
library(fpp2)
library(kableExtra)
library(ggthemes)
TargetLabF &amp;lt;- read_csv(&amp;quot;C:/Users/Lenovo/Desktop/AGSM/Fall2019/Forecasting/TargetDecomp/TargetLabF.csv&amp;quot;)
TargetLabF$Period &amp;lt;- with(TargetLabF, paste(Yr, Quarter, sep = &amp;quot;:Q&amp;quot;))

# Create Timeseries Data for Decomposition Analysis
TargetTS &amp;lt;- TargetLabF %&amp;gt;%
  filter(!is.na(Sales)) %&amp;gt;%
  select(Time, Sales) %&amp;gt;%
  ts(., start = c(1993, 1), end = c(2001, 4), frequency = 4)

# Plot Data
TargetLabF %&amp;gt;%
  filter(!is.na(Sales)) %&amp;gt;%
  ggplot(aes(x=Time, y=Sales)) + 
  geom_line(size = 2) + 
  scale_x_continuous(breaks = TargetLabF$Time, labels = TargetLabF$Period) +
  theme_economist_white() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  ggtitle(&amp;quot;Target Quarterly Sales 1993:Q1 - 2001:Q4&amp;quot;) +
  ylab(&amp;quot;Sales (in millions of US Dollars)&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zldyne.netlify.app/post/2019-10-31-target-quarterly-revenue-forecasting_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Target’s quarterly sales show a general upward trend with strong seasonality. There is a strong increase in Quarter 4 in each year, which is typical for the retail industry given the surge in holiday shopping. There isn’t a clear cycle, though, meaning that the trend is fairly constnat.&lt;/p&gt;
&lt;p&gt;Since the seasonal component here is constant from year to year, a classical decomposition method should work nicely here. We will work first through an additive decomposition and then through a multiplicative decomposition process.&lt;/p&gt;
&lt;div id=&#34;additive-decomposition&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Additive Decomposition&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TargetAddDecompm &amp;lt;- TargetTS %&amp;gt;% 
  decompose(type = &amp;quot;additive&amp;quot;)

TargetAddDecompm %&amp;gt;%
  autoplot() +
  ggtitle(&amp;quot;Classical Additive Decomposition of Target Sales&amp;quot;) +
  xlab(&amp;quot;Year&amp;quot;) +
  theme_economist_white() # choose economist theme&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zldyne.netlify.app/post/2019-10-31-target-quarterly-revenue-forecasting_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;
This plot is reasonably interesting, as it shows th trend and seasonally adjusted data alonogside each other, along with the error from the decomposition model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Extract Seasonal and Trend Components
Seasonal &amp;lt;- TargetAddDecompm$seasonal  # Extract seasonal indecies            
SeasAdj &amp;lt;- (TargetTS/Seasonal)         # Seasonally adjusted data   
TimeF &amp;lt;- TargetLabF %&amp;gt;% select(Time)   # Extract TimeF
TrendMod &amp;lt;- lm(SeasAdj ~ TargetTS)     # Fit trend to seasonally adjusted data   
TimeFramef &amp;lt;- TargetLabF %&amp;gt;% select(Sales) # Extract sales
Trend &amp;lt;- predict(TrendMod,              # Project trend using trend model  
                 newdata = TargetTS)
TrendDecomp &amp;lt;- TargetAddDecompm$trend   #Extract trend value
TrendDecompDF &amp;lt;- TrendDecomp[,2] %&amp;gt;% as.data.frame() # Convert trend value to df
names(TrendDecompDF) &amp;lt;- c(&amp;quot;Trend&amp;quot;) # rename

# to find model coeficients
summary(TrendMod)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Response TargetTS.Time :
## 
## Call:
## lm(formula = TargetTS.Time ~ TargetTS)
## 
## Residuals:
##       Min        1Q    Median        3Q       Max 
## -0.043735 -0.017572 -0.003055  0.022056  0.041730 
## 
## Coefficients:
##                 Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)   -1.207e-01  1.294e-02  -9.326 9.03e-11 ***
## TargetTSTime  -1.168e-02  8.534e-04 -13.690 3.67e-15 ***
## TargetTSSales  5.398e-05  4.450e-06  12.129 1.05e-13 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.02545 on 33 degrees of freedom
## Multiple R-squared:  0.8503, Adjusted R-squared:  0.8413 
## F-statistic: 93.74 on 2 and 33 DF,  p-value: 2.455e-14
## 
## 
## Response TargetTS.Sales :
## 
## Call:
## lm(formula = TargetTS.Sales ~ TargetTS)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -10.084  -4.671  -2.064   5.803  11.019 
## 
## Coefficients:
##                 Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)   -37.309120   3.250817  -11.48 4.61e-13 ***
## TargetTSTime   -2.650954   0.214332  -12.37 6.14e-14 ***
## TargetTSSales   0.013913   0.001118   12.45 5.16e-14 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 6.392 on 33 degrees of freedom
## Multiple R-squared:  0.8325, Adjusted R-squared:  0.8223 
## F-statistic: 81.99 on 2 and 33 DF,  p-value: 1.575e-13&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TrendVals &amp;lt;- Trend %&amp;gt;% 
  as.data.frame() %&amp;gt;% 
  select(TargetTS.Sales) %&amp;gt;% 
  ts(., start = c(1993, 1), end = c(2001, 4), frequency = 4)

#create aggregate dataframe for plotting and performance anlaysis
Forecast &amp;lt;- TrendVals * Seasonal
SalesData &amp;lt;- TargetTS %&amp;gt;% as.data.frame() %&amp;gt;% select(Sales) 
TimeData &amp;lt;- TargetTS %&amp;gt;% as.data.frame() %&amp;gt;%  select(Time)
AddPlot &amp;lt;- data.frame(TrendDecompDF, Forecast, SalesData, TimeData)
names(AddPlot) &amp;lt;- c(&amp;quot;Trend&amp;quot;, &amp;quot;Forecast&amp;quot;, &amp;quot;Data&amp;quot;, &amp;quot;Time&amp;quot;)
AddPlot %&amp;gt;%
  gather(key=&amp;quot;DataType&amp;quot;, value=&amp;quot;Value&amp;quot;, 1:3) %&amp;gt;%
  ggplot(aes(x=Time, y=Value, color = DataType)) + 
  geom_line(size=1.5) + 
  theme_economist_white() +
  scale_x_continuous(breaks = TargetLabF$Time, labels = TargetLabF$Period) + 
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  ggtitle(&amp;quot;Additve Decomposition&amp;quot;, subtitle = &amp;quot;Forecast and Actual Data&amp;quot;) +
  ylab(&amp;quot;Sales (in millions of US Dollars)&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zldyne.netlify.app/post/2019-10-31-target-quarterly-revenue-forecasting_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Seasonal Indecies (in millions of dollars)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Seasonal %&amp;gt;%
  as.tibble() %&amp;gt;%
  rowid_to_column() %&amp;gt;%
  filter(rowid &amp;lt; 5) %&amp;gt;%
  rename(&amp;quot;Quarter&amp;quot; = &amp;quot;rowid&amp;quot;) %&amp;gt;%
  rename(&amp;quot;Seasonal_Indicator&amp;quot; = &amp;quot;x&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;kable-table&#34;&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Quarter
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Seasonal_Indicator
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-319.0977
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-200.3242
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-205.1211
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
724.5430
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;Performance Metrics&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create all of the relevant performance metrics
SSTO &amp;lt;- sum((AddPlot$Data - mean(AddPlot$Data))^2)
SSE &amp;lt;- sum((AddPlot$Data - AddPlot$Forecast)^2)
MSD &amp;lt;- SSE/length(AddPlot$Data)
s &amp;lt;- sqrt(MSD)
R2 &amp;lt;- (SSTO - SSE)/SSTO
MAD &amp;lt;- sum(abs(AddPlot$Data - AddPlot$Forecast))/length(AddPlot$Data)
MPE &amp;lt;- 100*sum((AddPlot$Data - AddPlot$Forecast)/AddPlot$Data)/length(AddPlot$Data)
MAPE &amp;lt;- 100*sum(abs((AddPlot$Data - AddPlot$Forecast)/AddPlot$Data))/length(AddPlot$Data)  
Performance &amp;lt;- tibble(SSTO, SSE, MSD, s, R2, MAD, MPE, MAPE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;additive-decomposition-performance-metrics&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Additive Decomposition Performance Metrics&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Performance %&amp;gt;% kable() %&amp;gt;% kable_styling()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
SSTO
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
SSE
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
MSD
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
s
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
R2
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
MAD
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
MPE
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
MAPE
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
142871385
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
167622658
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4656185
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2157.819
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.1732416
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1743.858
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.88285
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
33.83439
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;additive-decomposition-assessment&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Additive Decomposition Assessment&lt;/h3&gt;
&lt;p&gt;Through all of that, our predicted spike in quarter four is expected to continue, but the ability of the forecast to predict actual data in quater 3 in years 1996-1998 are far off, as the plot of forecast would suggest.&lt;/p&gt;
&lt;p&gt;We have a farily low R2, which is the portion of variation explained by the model. This coincides with a high MAD (Mean Absolute Deviation) and SSE (Sum of Squered Error), which are both metrics of by how much the model misses actual data. While these are useful quantitative metircs, the of forecast against actual data indicates that perhaps we should try multiplicative decomposition methods for forecasting Target’s quarterly revenue.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;multiplicative-decomposition&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Multiplicative Decomposition&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TargetMultDecomp &amp;lt;- TargetTS %&amp;gt;% 
  decompose(type = &amp;quot;multiplicative&amp;quot;) 

TargetMultDecomp %&amp;gt;%
  autoplot() +
  ggtitle(&amp;quot;Classical Multiplicative Decomposition of Target Sales&amp;quot;) +
  xlab(&amp;quot;Year&amp;quot;) + 
  theme_economist_white()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zldyne.netlify.app/post/2019-10-31-target-quarterly-revenue-forecasting_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Extract Seasonal and Trend Components
Seasonal &amp;lt;- TargetMultDecomp$seasonal              
SeasAdj &amp;lt;- (TargetTS/Seasonal)          
TimeF &amp;lt;- TargetLabF %&amp;gt;% select(Time)
TrendMod &amp;lt;- lm(SeasAdj ~ TargetTS)
TimeFramef &amp;lt;- TargetLabF %&amp;gt;% select(Sales)
Trend &amp;lt;- predict(TrendMod,                
                 newdata = TargetTS)
TrendDecomp &amp;lt;- TargetMultDecomp$trend
TrendDecompDF &amp;lt;- TrendDecomp[,2] %&amp;gt;% as.data.frame()
names(TrendDecompDF) &amp;lt;- c(&amp;quot;Trend&amp;quot;)

TrendVals &amp;lt;- Trend %&amp;gt;% 
  as.data.frame() %&amp;gt;% 
  select(TargetTS.Sales) %&amp;gt;% 
  ts(., start = c(1993, 1), end = c(2001, 4), frequency = 4)

#create aggregate dataframe for plotting and performance anlaysis
Forecast &amp;lt;- TrendVals * Seasonal
SalesData &amp;lt;- TargetTS %&amp;gt;% as.data.frame() %&amp;gt;% select(Sales) 
TimeData &amp;lt;- TargetTS %&amp;gt;% as.data.frame() %&amp;gt;%  select(Time)
MultPlot &amp;lt;- data.frame(TrendDecompDF, Forecast, SalesData, TimeData)
names(MultPlot) &amp;lt;- c(&amp;quot;Trend&amp;quot;, &amp;quot;Forecast&amp;quot;, &amp;quot;Data&amp;quot;, &amp;quot;Time&amp;quot;)
MultPlot %&amp;gt;%
  gather(key=&amp;quot;DataType&amp;quot;, value=&amp;quot;Value&amp;quot;, 1:3) %&amp;gt;%
  ggplot(aes(x=Time, y=Value, color = DataType)) + 
  geom_line(size=1.5) + 
  scale_x_continuous(breaks = TargetLabF$Time, labels = TargetLabF$Period) +
  theme_economist_white() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  ggtitle(&amp;quot;Multiplicative Decomposition&amp;quot;) +
  ylab(&amp;quot;Sales (in millions of US Dollars)&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zldyne.netlify.app/post/2019-10-31-target-quarterly-revenue-forecasting_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Seasonal %&amp;gt;%
  as.tibble() %&amp;gt;%
  rowid_to_column() %&amp;gt;%
  filter(rowid &amp;lt; 5) %&amp;gt;%
  rename(&amp;quot;Quarter&amp;quot; = &amp;quot;rowid&amp;quot;) %&amp;gt;%
  rename(&amp;quot;Seasonal_Indicator&amp;quot; = &amp;quot;x&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;kable-table&#34;&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Quarter
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Seasonal_Indicator
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9387531
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9632068
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9580566
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1399835
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;SSTO &amp;lt;- sum((MultPlot$Data - mean(MultPlot$Data))^2)
SSE &amp;lt;- sum((MultPlot$Data - MultPlot$Forecast)^2)
MSD &amp;lt;- SSE/length(MultPlot$Data)
s &amp;lt;- sqrt(MSD)
R2 &amp;lt;- (SSTO - SSE)/SSTO
MAD &amp;lt;- sum(abs(MultPlot$Data - MultPlot$Forecast))/length(MultPlot$Data)
MPE &amp;lt;- 100*sum((MultPlot$Data - MultPlot$Forecast)/MultPlot$Data)/length(MultPlot$Data)
MAPE &amp;lt;- 100*sum(abs((MultPlot$Data - MultPlot$Forecast)/MultPlot$Data))/length(MultPlot$Data)  
Performance &amp;lt;- tibble(SSTO, SSE, MSD, s, R2, MAD, MPE, MAPE)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;multiplicative-decomposition-performance-metrics&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Multiplicative Decomposition Performance Metrics&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Performance %&amp;gt;% kable() %&amp;gt;% kable_styling()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
SSTO
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
SSE
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
MSD
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
s
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
R2
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
MAD
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
MPE
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
MAPE
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
142871385
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
283144.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7865.124
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
88.68553
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9980182
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
69.91029
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1328121
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.487155
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;multiplicative-decomposition-assessment&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Multiplicative Decomposition Assessment&lt;/h3&gt;
&lt;p&gt;The multiplicative model performs noteably better than the additive model. The R2 indicates that almost 99% of the varaition is captured by the model. As demonstrated by the low MAD and SSE values, the model has a fairly low total error. This model may actually be useful for forecasting Target’s 2002 and 2003 quarterly revenue. Let’s do it!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;forecasting-2002---2003&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Forecasting 2002 - 2003&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TargetTS %&amp;gt;% 
  forecast() %&amp;gt;%
  autoplot() +
  ggtitle(&amp;quot;Target Sales Forecast Using Multiplicative Decomposition&amp;quot;) + 
  ylab(&amp;quot;Sales &amp;amp; Forecast (in millions of US dollars&amp;quot;) +
  theme_economist_white()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zldyne.netlify.app/post/2019-10-31-target-quarterly-revenue-forecasting_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;TargetTS %&amp;gt;% 
  forecast() %&amp;gt;%
  as.data.frame() %&amp;gt;% 
  filter(Series == &amp;quot;Sales&amp;quot;) %&amp;gt;%
  select(-Series)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;kable-table&#34;&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Time
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Point Forecast
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Lo 80
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Hi 80
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Lo 95
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Hi 95
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2002 Q1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7488.757
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7288.633
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7688.881
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7182.693
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7794.821
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2002 Q2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8084.943
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7838.603
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8331.283
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7708.198
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8461.687
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2002 Q3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8201.530
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7918.507
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8484.552
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7768.684
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8634.375
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2002 Q4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11688.782
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11235.422
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12142.141
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10995.428
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12382.135
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2003 Q1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8178.980
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7825.157
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8532.802
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7637.855
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8720.105
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2003 Q2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8813.331
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8391.215
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9235.447
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8167.761
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9458.902
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2003 Q3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8924.146
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8454.131
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9394.161
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8205.321
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9642.972
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2003 Q4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12696.455
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11965.674
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13427.237
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11578.821
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13814.089
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
